blockdown::new_site()
blogdown::new_site()
blogdown:::serve_site()
blogdown::new_site(theme = 'themefisher/liva-hugo')
blogdown::new_site(theme = 'MunifTanjim/minimo')
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
servr::daemon_stop(5)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
servr::daemon_stop(3)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library('dplyr')
library('dplyr')
library('ggplot2')
library('RColorBrewer')
library('reshape2')
# To dos:
# - Compare coronavirus death rates with flu virus death rates
# - Plot number of new cases
# - Plot number of deaths
# - Make a Shiny app with adjustable / interactive graphs
# - Kaggle challenge?
setwd('/Users/nancyyu/Documents/CoronaVirusPlots')
options(scipen=100)
#options(stringsAsFactors=FALSE)
`%notin%` <- function(x,y) !(x %in% y)
cumulative.cases <- read.csv('covid-confirmed-cases-since-100th-case.csv', sep=',')
west.europe <- c('Germany', 'France', 'Spain', 'Italy', 'Sweden')
# Filter out "International" and "World"
countries.dont.use <- c('International', 'World')
countries.use <- cumulative.cases[cumulative.cases$Entity %notin% countries.dont.use, ]
#countries.use <- cumulative.cases[cumulative.cases$Entity %in% west.europe, ]
# Select countries where Days_100 >= 5
countries.filter <- countries.use[countries.use$Days_100 >= 10,]
countries.sel <- unique(countries.filter$Code)
# Choose all the data points for the selected countries starting from Days_100 > 0
countries.final <- countries.use[countries.use$Code %in% countries.sel & countries.use$Days_100 > 0,]
# Plot 1 == Linear scale for total number of cases
cum.plot <- ggplot(data=countries.final, aes(x=Days_100, y=Total_cases, group=Code, color=Code)) +
geom_line() + geom_point() + scale_color_brewer(palette = 'Set3') +
scale_x_continuous('Days since the 100th case') + scale_y_continuous("Total cases") +
ggtitle('Linear scale') +
theme_minimal()
print(cum.plot)
## Plot 2
## Logarithmic style plots
cum.plot2 <- ggplot(data=countries.final, aes(x=Days_100, y=Total_cases, group=Code, color=Code)) +
geom_line() + geom_point() + scale_color_brewer(palette = 'Set3') +
scale_x_continuous(name='Days since the 100th case') + scale_y_log10(name="Total cases") +
ggtitle('Logarithmic scale') +
theme_minimal()
print(cum.plot2)
library('dplyr')
library('ggplot2')
library('RColorBrewer')
library('reshape2')
# To dos:
# - Compare coronavirus death rates with flu virus death rates
# - Plot number of new cases
# - Plot number of deaths
# - Make a Shiny app with adjustable / interactive graphs
# - Kaggle challenge?
setwd('/Users/nancyyu/Documents/CoronaVirusPlots')
options(scipen=100)
#options(stringsAsFactors=FALSE)
`%notin%` <- function(x,y) !(x %in% y)
#cumulative.cases <- read.csv('covid-confirmed-cases-since-100th-case.csv', sep=',')
cumulative.cases <- read.csv('GermanyTotalCases.csv.csv', sep=',')
# Filter out "International" and "World"
# countries.dont.use <- c('International', 'World')
# countries.use <- cumulative.cases[cumulative.cases$Entity %notin% countries.dont.use, ]
# countries.use <- cumulative.cases[cumulative.cases$Entity %in% west.europe, ]
# Select countries where Days_100 >= 0
countries.final <- countries.use[countries.use$Days_100 >= 0,]
#countries.sel <- unique(countries.filter$Code)
# Choose all the data points for the selected countries starting from Days_100 > 0
#countries.final <- countries.use[countries.use$Code %in% countries.sel & countries.use$Days_100 > 0,]
# Plot 1 == Linear scale for total number of cases
cum.plot <- ggplot(data=countries.final, aes(x=Days_100, y=Total_cases, group=State, color=State)) +
geom_line() + geom_point() + scale_color_brewer(palette = 'Set3') +
scale_x_continuous('Days since the 100th case') + scale_y_continuous("Total cases") +
ggtitle('Linear scale') +
theme_minimal()
print(cum.plot)
library('dplyr')
library('ggplot2')
library('RColorBrewer')
library('reshape2')
# To dos:
# - Compare coronavirus death rates with flu virus death rates
# - Plot number of new cases
# - Plot number of deaths
# - Make a Shiny app with adjustable / interactive graphs
# - Kaggle challenge?
setwd('/Users/nancyyu/Documents/CoronaVirusPlots')
options(scipen=100)
#options(stringsAsFactors=FALSE)
`%notin%` <- function(x,y) !(x %in% y)
#cumulative.cases <- read.csv('covid-confirmed-cases-since-100th-case.csv', sep=',')
cumulative.cases <- read.csv('GermanyTotalCases.csv.csv', sep=',')
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
